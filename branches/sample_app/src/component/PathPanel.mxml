<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:comp="component.*" 
	xmlns:color="component.color.*" 
	xmlns:gradient="component.color.gradient.*"
	implements="component.StylePanel" 
	styleName="stylePanel" 
	height="600"
	title="{styleVo.itemType}" >
		
	<mx:Metadata>
        [Event(name="styleChange", type="event.StyleChangeEvent")]
	</mx:Metadata>
	
	<mx:Script><![CDATA[
		import event.PanelEvent;
		import flash.events.Event;
		import flash.geom.Matrix;
		import mx.events.SliderEvent;
		import mx.events.NumericStepperEvent;
		import mx.events.ItemClickEvent;
		import mx.events.MenuEvent;
		import mx.events.ColorPickerEvent;
		import mx.resources.ResourceManager;
		
		import svgeditor.parser.IGradient;
		import svgeditor.parser.style.Style;
		import svgeditor.StyleObject;
		import event.StyleChangeEvent;
		import component.vo.StyleVo;

		[Bindable]
		private var styleVo:StyleVo = new StyleVo();
		
		public function setItemStyle( o:StyleObject ):void
		{
			itemName.text = o.id;
			styleVo.fillColorValue = o.fillColor;
			styleVo.strokeColorValue = o.strokeColor;
			styleVo.fillAlphaValue = o.fill_opacity;
			styleVo.strokeAlphaValue = o.stroke_opacity;
			styleVo.strokeWidthValue = o.stroke_width;
			styleVo.alphaValue = o.opacity;
			styleVo.blurValue = o.blur;
			styleVo.strokeMiterlimitValue = o.stroke_miterlimit;
			styleVo.strokeLinecap = o.stroke_linecap;
			styleVo.strokeLineJoin = o.stroke_linejoin;
			
			styleVo.fillGradation = o.fillGradient;
			styleVo.strokeGradation = o.StrokeGradient;
			noFillBox.selected = o.noFill;
		}
		
		public function setItemType( t:String ):void 
		{
			styleVo.itemType = t;
		}
		
		private function onNameChange( e:Event ):void 
		{
			var o:StyleObject = new StyleObject();
			o.id = itemName.text;
			dispatchEvent( new StyleChangeEvent( o ) );
		}
		
		private function onFillColorChange( e:ColorPickerEvent ):void 
		{
			var o:StyleObject = new StyleObject();
			o.fillColor = e.color;
			dispatchEvent( new StyleChangeEvent( o ) );
			noFillBox.selected = false;
		}
		
		private function onNoFill():void 
		{
			var o:StyleObject = new StyleObject();
			o.noFill = noFillBox.selected;
			dispatchEvent( new StyleChangeEvent( o ) );
		}
		
		private function onStrokeColorChange( e:ColorPickerEvent ):void 
		{
			var o:StyleObject = new StyleObject();
			o.strokeColor = e.color;
			dispatchEvent( new StyleChangeEvent( o ) );
		}
		
		private function onFillAlphaChange( e:SliderEvent ):void 
		{
			var o:StyleObject = new StyleObject();
			o.fill_opacity = e.value;
			dispatchEvent( new StyleChangeEvent( o ) );
		}
		
		private function onStrokeAlphaChange( e:SliderEvent ):void 
		{
			var o:StyleObject = new StyleObject();
			o.stroke_opacity = e.value;
			dispatchEvent( new StyleChangeEvent( o ) );
		}
		
		private function onStrokeWidthChange( e:SliderEvent ):void 
		{
			var o:StyleObject = new StyleObject();
			o.stroke_width = e.value;
			dispatchEvent( new StyleChangeEvent( o ) );
		}

		private function onCapStyleChange( e:MenuEvent ):void 
		{
			var o:StyleObject = new StyleObject();
			o.stroke_linecap = styleVo.strokeLinecap =  e.label;
			dispatchEvent( new StyleChangeEvent( o ) );
		}
		
		private function onJointStyleChange( e:MenuEvent ):void 
		{
			var o:StyleObject = new StyleObject();
			o.stroke_linejoin = styleVo.strokeLineJoin =  e.label;
			dispatchEvent( new StyleChangeEvent( o ) );
		}
		
		private function onStrokeMiterlimitChange( e:NumericStepperEvent ):void 
		{
			var o:StyleObject = new StyleObject();
			o.stroke_miterlimit = e.value;
			dispatchEvent( new StyleChangeEvent( o ) );
		}
		
		private function dispatchGradient( e:Event ):void
		{
			var o:StyleObject = new StyleObject();
			if ( e.currentTarget == fillGrad ) 
			{
				o.fillGradient = fillGrad.getGradient();
				noFillBox.selected = false;
			}
			if ( e.currentTarget == strokeGrad ) o.StrokeGradient = strokeGrad.getGradient();
			dispatchEvent( new StyleChangeEvent( o ) );
		}
		
		private function fillPanelInit():void 
		{
			fillMenu.dataProvider = [	ResourceManager.getInstance().getString("Panel", "Flat"), 
										ResourceManager.getInstance().getString("Panel", "Gradient")];
			if( styleVo.fillGradation )
				fillStack.selectedIndex = fillMenu.selectedIndex = 1;
		}
		
		private function fillModeChange( e:ItemClickEvent ):void
		{
			if ( e.label == ResourceManager.getInstance().getString("Panel", "Flat") ) 
				fillStack.selectedChild = fillFlatBox;
			else if ( e.label == ResourceManager.getInstance().getString("Panel", "Gradient") ) 
				fillStack.selectedChild=fillGradBox;
		}
		
		private function strokePanelInit():void 
		{
			strokeMenu.dataProvider = [	ResourceManager.getInstance().getString("Panel", "Flat"), 
										ResourceManager.getInstance().getString("Panel", "Gradient"),
										ResourceManager.getInstance().getString("Panel", "Style")];
			if( styleVo.strokeGradation )
				 strokeStack.selectedIndex = strokeMenu.selectedIndex = 1;
		}
		
		private function strokeModeChange( e:ItemClickEvent ):void
		{
			if ( e.label == ResourceManager.getInstance().getString("Panel", "Flat") )  
				strokeStack.selectedChild =  strokeFlatBox;
			else if ( e.label == ResourceManager.getInstance().getString("Panel", "Gradient") )  
				strokeStack.selectedChild = strokeGradBox;
			else if ( e.label == ResourceManager.getInstance().getString("Panel", "Style") )  
				strokeStack.selectedChild = strokeSettingBox;
		}
		
		private function editStrokeGradient():void
		{
			dispatchEvent( new PanelEvent( PanelEvent.EDIT_STROKE_GRADIENT ) );
		}
		
		private function editFillGradient():void
		{
			dispatchEvent( new PanelEvent( PanelEvent.EDIT_FILL_GRADIENT ) );
		}	
		
	]]></mx:Script>
	
	<mx:TextInput id="itemName" width="100%" change="onNameChange( event );" />
	
	<mx:TabNavigator id="tn" width="100%" height="100%" color="0x323232">
	
	<mx:VBox id="fillBox" label="@Resource(key='Fill', bundle='Panel')" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="stylePanel">
		
		<mx:CheckBox id="noFillBox" label="@Resource(key='NoFill', bundle='Panel')" change="onNoFill();" />
		
		<mx:ToggleButtonBar id="fillMenu" itemClick="fillModeChange(event);" creationComplete="fillPanelInit()"/>
		
		<mx:ViewStack id="fillStack" width="100%" height="100%">
			
			<mx:VBox id="fillFlatBox">
				<color:ColorWheelSet id="fillColor" 
					rgbValue="{styleVo.fillColorValue}" 
					change="onFillColorChange(event);" 
				/>
				<mx:Label text="@Resource(key='Opacity', bundle='Panel')" />
				<mx:HSlider
					minimum="0"
					maximum="1"
					snapInterval="0.01"
					width="{fillColor.width}"
					change="onFillAlphaChange(event)"
					id="fillAlpha"
					liveDragging="true"
					tickInterval="0.5"
					value="{styleVo.fillAlphaValue}"
				/>
			</mx:VBox>
			
			<mx:VBox id="fillGradBox">
				<mx:Button label="@Resource(key='EditDirection', bundle='Panel')" click="editFillGradient()" />
				<gradient:Gradation id="fillGrad" 
					change="dispatchGradient( event )" 
					creationComplete="fillGrad.setGradient( styleVo.fillGradation )" 
				/>
			</mx:VBox>
			
		</mx:ViewStack>
	</mx:VBox>
	
	<mx:VBox id="strokeBox" label="@Resource(key='Stroke', bundle='Panel')">
			<mx:VBox id="strokeColorBox" label="Stroke Color" width="100%" height="100%" paddingTop="3" >
				<mx:ToggleButtonBar id="strokeMenu" itemClick="strokeModeChange(event);" creationComplete="strokePanelInit()"/>
		
				<mx:ViewStack id="strokeStack" width="100%" height="100%">
					
					<mx:VBox id="strokeFlatBox">
						<color:ColorWheelSet id="strokeColor" 
							rgbValue="{styleVo.strokeColorValue}" 
							change="onStrokeColorChange(event);" 
						/>
						<mx:Label text="@Resource(key='Opacity', bundle='Panel')" />
						<mx:HSlider
							minimum="0"
							maximum="1"
							snapInterval="0.01"
							width="{strokeColor.width}"
							change="onStrokeAlphaChange(event)"
							id="strokeAlpha"
							liveDragging="true"
							tickInterval="0.5"
							value="{styleVo.strokeAlphaValue}"
						/>
					</mx:VBox>
					
					<mx:VBox id="strokeGradBox">
						<mx:Button label="@Resource(key='EditDirection', bundle='Panel')" click="editStrokeGradient()" />
						<gradient:Gradation id="strokeGrad" change="dispatchGradient( event )" creationComplete="strokeGrad.setGradient( styleVo.strokeGradation )" />
					</mx:VBox>
					
					<mx:VBox id="strokeSettingBox" >
						<mx:Label text="@Resource(key='StrokeSize', bundle='Panel')" />
						<mx:HSlider
							minimum="0"
							maximum="60"
							snapInterval="0.1"
							width="100%"
							change="onStrokeWidthChange(event)"
							id="strokeWidth"
							liveDragging="true"
							tickInterval="10"
							value="{styleVo.strokeWidthValue}"
						/>
					
						<mx:Form paddingTop="0" paddingBottom="0">
							<mx:FormItem label="@Resource(key='CapStyle', bundle='Panel')">
								<mx:PopUpMenuButton 
									id="strokeLinecap" 
									label="{styleVo.strokeLinecap}" 
									dataProvider="{StyleVo.CAP_STYLES}" 
									itemClick="onCapStyleChange(event)" 
								/>
							</mx:FormItem>
							
							<mx:FormItem label="@Resource(key='JointStyle', bundle='Panel')">
								<mx:PopUpMenuButton 
									id="strokeJointStyle" 
									label="{styleVo.strokeLineJoin}" 
									dataProvider="{StyleVo.JOINT_STYLES}" 
									itemClick="onJointStyleChange(event)" 
								/>
							</mx:FormItem>
							
							<mx:FormItem label="@Resource(key='MiterLimit', bundle='Panel')">
								<mx:NumericStepper 
									id="strokeMiterlimit" 
									stepSize="0.1"
									maximum="10.0"
									change="onStrokeMiterlimitChange(event)" 
									value="{styleVo.strokeMiterlimitValue}" 
								/>
							</mx:FormItem>
						</mx:Form>
					</mx:VBox>
					
				</mx:ViewStack>
			</mx:VBox>
			
	</mx:VBox>
	
	<comp:PropertyPanel 
		id="transBox" 
		label="@Resource(key='Prop', bundle='Panel')" 
		alphaValue="{styleVo.alphaValue}"
		blurValue="{styleVo.blurValue}"
		horizontalScrollPolicy="off" verticalScrollPolicy="off" 
	/>
	
	</mx:TabNavigator>
	
</mx:TitleWindow>